openapi: 3.0.3

info:
  title: User Management API
  version: 0.0.1

servers:
  - url: /api/v1
    description: Version 1 of the API

security:
  - bearerAuth: [ ]
  - basicAuth: [ ]

paths:
  /users:
    post:
      security:
        - basicAuth: [ ]
      summary: Create a new user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
      responses:
        '201':
          $ref: '#/components/responses/UserCreated'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalError'

  /users/{id}:
    get:
      security:
        - basicAuth: [ ]
      summary: Get user information
      operationId: getUser
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '200':
          $ref: '#/components/responses/UserResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

    put:
      security:
        - basicAuth: [ ]
      summary: Update user information
      operationId: updateUser
      parameters:
        - $ref: '#/components/parameters/IdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/UserResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalError'

    delete:
      security:
        - basicAuth: [ ]
      operationId: deleteUser
      summary: Delete a user
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '204':
          description: User deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

    patch:
      security:
        - basicAuth: [ ]
      operationId: patchUser
      summary: Partially update a user
      parameters:
        - $ref: '#/components/parameters/IdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/UserResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalError'

  /users/{id}/audit:
    get:
      security:
        - basicAuth: [ ]
      summary: Get audit log of user updates
      operationId: getUserAudit
      parameters:
        - $ref: '#/components/parameters/IdParam'
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/SizeParam'
        - $ref: '#/components/parameters/SortDirectionParam'
      responses:
        '200':
          $ref: '#/components/responses/UserAuditResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

components:
  parameters:
    SortDirectionParam:
      name: sort
      in: query
      description: Sort direction for audit entries by timestamp
      required: false
      schema:
        type: string
        enum: [ asc, desc ]
        default: desc
    IdParam:
      name: id
      in: path
      required: true
      schema:
        type: integer
        format: int64
    PageParam:
      name: page
      in: query
      schema:
        type: integer
        default: 0
    SizeParam:
      name: size
      in: query
      schema:
        type: integer
        default: 20

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    basicAuth:    # Changed from bearerAuth
      type: http
      scheme: basic

  responses:
    UserCreated:
      description: User created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserResponse'
    UserResponse:
      description: User info
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserResponse'
    UserAuditResponse:
      description: Paginated list of user updates
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserAuditPage'
    BadRequest:
      description: Invalid request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Unauthorized:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Forbidden:
      description: Insufficient permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Conflict:
      description: Resource conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  schemas:
    UserCreateRequest:
      type: object
      required: [ firstName, lastName, dateOfBirth, email ]
      properties:
        firstName:
          type: string
        lastName:
          type: string
        dateOfBirth:
          type: string
          format: date
        email:
          type: string
          format: email

    UserUpdateRequest:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        dateOfBirth:
          type: string
          format: date
        email:
          type: string
          format: email

    UserResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        dateOfBirth:
          type: string
          format: date
        email:
          type: string
          format: email

    UserAuditEntry:
      type: object
      properties:
        revisionId:
          type: integer
        revisionType:
          type: string
          enum: [ ADD, MOD, DEL ]
        timestamp:
          type: string
          format: date-time
        entity:
          $ref: '#/components/schemas/UserResponse'

    UserAuditPage:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/UserAuditEntry'
        totalElements:
          type: integer
        totalPages:
          type: integer
        size:
          type: integer
        number:
          type: integer

    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
        error:
          type: string
        message:
          type: string
        path:
          type: string